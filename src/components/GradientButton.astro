---
interface Props {
    href: string;
    color?: "pine" | "love" | "foam" | "rose" | "gold" | "iris";
    class?: string;
    icon?: "arrow" | "calendar" | "download" | "play" | "mail" | undefined;
    external?: boolean;
}

const {
    href,
    color = "pine",
    class: className = "",
    icon,
    external,
} = Astro.props;

const colors = {
    pine: {
        bg: "bg-pine/10",
        hover: "hover:bg-pine/20",
        text: "text-pine",
        border: "border-pine/20",
        hoverBorder: "hover:border-pine/30",
    },
    love: {
        bg: "bg-love/10",
        hover: "hover:bg-love/20",
        text: "text-love",
        border: "border-love/20",
        hoverBorder: "hover:border-love/30",
    },
    foam: {
        bg: "bg-foam/10",
        hover: "hover:bg-foam/20",
        text: "text-foam",
        border: "border-foam/20",
        hoverBorder: "hover:border-foam/30",
    },
    rose: {
        bg: "bg-rose/10",
        hover: "hover:bg-rose/20",
        text: "text-rose",
        border: "border-rose/20",
        hoverBorder: "hover:border-rose/30",
    },
    gold: {
        bg: "bg-gold/10",
        hover: "hover:bg-gold/20",
        text: "text-gold",
        border: "border-gold/20",
        hoverBorder: "hover:border-gold/30",
    },
    iris: {
        bg: "bg-iris/10",
        hover: "hover:bg-iris/20",
        text: "text-iris",
        border: "border-iris/20",
        hoverBorder: "hover:border-iris/30",
    },
};

const icons = {
    arrow: `<svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M5 12h14"></path>
        <path d="m12 5 7 7-7 7"></path>
    </svg>`,
    calendar: `<svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
        <line x1="16" y1="2" x2="16" y2="6"></line>
        <line x1="8" y1="2" x2="8" y2="6"></line>
        <line x1="3" y1="10" x2="21" y2="10"></line>
    </svg>`,
    download: `<svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
        <polyline points="7 10 12 15 17 10"></polyline>
        <line x1="12" y1="15" x2="12" y2="3"></line>
    </svg>`,
    play: `<svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <polygon points="5 3 19 12 5 21 5 3"></polygon>
    </svg>`,
    mail: `<svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1-.9-2-2-2z"></path>
        <polyline points="22,6 12,13 2,6"></polyline>
    </svg>`,
};

const colorConfig = colors[color];
---

<a
    href={href}
    {...external && { target: "_blank", rel: "noopener noreferrer" }}
    class:list={[
        "group relative px-8 py-3",
        colorConfig.bg,
        colorConfig.text,
        "rounded-full border",
        colorConfig.border,
        colorConfig.hover,
        colorConfig.hoverBorder,
        "transition-all duration-300",
        "font-medium text-base tracking-wide",
        "inline-flex items-center gap-2",
        className,
    ]}
>
    <span class="relative z-10">
        <slot />
    </span>
    {
        icon && (
            <span
                class="relative z-10 transition-transform duration-300 group-hover:translate-x-0.5"
                set:html={icons[icon]}
            />
        )
    }
</a>
